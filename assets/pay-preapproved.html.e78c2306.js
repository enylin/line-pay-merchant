import{_ as a,r,o as i,c as l,a as n,b as s,e,d as o}from"./app.951013b3.js";const d={},p=n("h1",{id:"pay-preapproved-api",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pay-preapproved-api","aria-hidden":"true"},"#"),e(" Pay Preapproved API")],-1),c=n("h2",{id:"overview",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#overview","aria-hidden":"true"},"#"),e(" Overview")],-1),u=e("An automatic payment registration process is required using "),v={href:"https://pay.line.me/documents/online_v3_en.html#request-api",target:"_blank",rel:"noopener noreferrer"},m=e("Request API"),k=e(" and "),h={href:"https://pay.line.me/documents/online_v3_en.html#confirm-api",target:"_blank",rel:"noopener noreferrer"},y=e("Confirm API"),b=e(". With "),g=n("strong",null,"RegKey",-1),x=e(" sent through the Confirm API, the payment can be processed without use approval."),f=o(`<ul><li><a href="#send"><code>send</code></a></li><li><a href="#addhandler"><code>addHandler</code></a></li><li><a href="#addhandlers"><code>addHandlers</code></a></li></ul><h2 id="send" tabindex="-1"><a class="header-anchor" href="#send" aria-hidden="true">#</a> send</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">send</span><span class="token punctuation">(</span>payPreapprovedRequestConfig<span class="token punctuation">)</span>
</code></pre></div><p>Returns <code>Promise&lt;ApiResponse&lt;PayPreapprovedResponseBody&gt;&gt;</code></p><h3 id="request-config" tabindex="-1"><a class="header-anchor" href="#request-config" aria-hidden="true">#</a> Request Config</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">PayPreapprovedRequestBody</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/**
   * Product name
   */</span>
  productName<span class="token operator">:</span> <span class="token builtin">string</span>
  <span class="token doc-comment comment">/**
   * Product amount
   */</span>
  amount<span class="token operator">:</span> <span class="token builtin">number</span>
  <span class="token doc-comment comment">/**
   * Payment currency ([ISO 4217](https://en.wikipedia.org/wiki/ISO_4217))\\
   * Supported currencies are as follows.
   * - USD
   * - JPY
   * - TWD
   * - THB
   */</span>
  currency<span class="token operator">:</span> <span class="token builtin">string</span>
  <span class="token doc-comment comment">/**
   * An unique order ID
   */</span>
  orderId<span class="token operator">:</span> <span class="token builtin">string</span>
  <span class="token doc-comment comment">/**
   * Purchasement
   * - True : Authorized and purchased
   * - False : Authorized but need to purchase with Capture API
   */</span>
  capture<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">PayPreapprovedRequestConfig</span> <span class="token operator">=</span> GeneralRequestConfig <span class="token operator">&amp;</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/**
   * A key used for automatic payment
   */</span>
  regKey<span class="token operator">:</span> <span class="token builtin">string</span>
  <span class="token doc-comment comment">/**
   * Request body of payPreapproved API
   */</span>
  body<span class="token operator">:</span> PayPreapprovedRequestBody
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="response-body" tabindex="-1"><a class="header-anchor" href="#response-body" aria-hidden="true">#</a> Response Body</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">Info</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/**
   * An unique order ID sent upon requesting for payment.
   */</span>
  orderId<span class="token operator">:</span> <span class="token builtin">string</span>
  <span class="token doc-comment comment">/**
   * A transaction ID returned as the payment reservation result (19 digits).
   */</span>
  transactionId<span class="token operator">:</span> <span class="token builtin">string</span>
  <span class="token doc-comment comment">/**
   * Transaction date ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601))
   */</span>
  transactionDate<span class="token operator">:</span> <span class="token builtin">string</span>
  <span class="token doc-comment comment">/**
   * Expiration date ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601))
   */</span>
  authorizationExpireDate<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">PayPreapprovedResponseBody</span> <span class="token operator">=</span> GeneralResponseBody <span class="token operator">&amp;</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/**
   * PayPreapproved information
   */</span>
  info<span class="token operator">:</span> Info
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="return-code" tabindex="-1"><a class="header-anchor" href="#return-code" aria-hidden="true">#</a> Return Code</h3><h4 id="success" tabindex="-1"><a class="header-anchor" href="#success" aria-hidden="true">#</a> Success</h4><table><thead><tr><th style="text-align:center;">Code</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">0000</td><td style="text-align:left;">Success</td></tr></tbody></table><h4 id="error" tabindex="-1"><a class="header-anchor" href="#error" aria-hidden="true">#</a> Error</h4><table><thead><tr><th style="text-align:center;">Code</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">1101</td><td style="text-align:left;">Not a LINE Pay member</td></tr><tr><td style="text-align:center;">1102</td><td style="text-align:left;">The member is unable to proceed the transaction.</td></tr><tr><td style="text-align:center;">1104</td><td style="text-align:left;">Non-existing merchant</td></tr><tr><td style="text-align:center;">1105</td><td style="text-align:left;">The merchant cannot use the LINE Pay.</td></tr><tr><td style="text-align:center;">1106</td><td style="text-align:left;">A header info error</td></tr><tr><td style="text-align:center;">1110</td><td style="text-align:left;">Unacceptable credit card</td></tr><tr><td style="text-align:center;">1124</td><td style="text-align:left;">Amount info error (scale)</td></tr><tr><td style="text-align:center;">1141</td><td style="text-align:left;">A payment account error</td></tr><tr><td style="text-align:center;">1142</td><td style="text-align:left;">Low balance</td></tr><tr><td style="text-align:center;">1150</td><td style="text-align:left;">Cannot find the transaction history</td></tr><tr><td style="text-align:center;">1152</td><td style="text-align:left;">There is a history of transactions with the same transactionId.</td></tr><tr><td style="text-align:center;">1153</td><td style="text-align:left;">The payment amount is different than the requested amount.</td></tr><tr><td style="text-align:center;">1159</td><td style="text-align:left;">Payment request information is not found.</td></tr><tr><td style="text-align:center;">1169</td><td style="text-align:left;">Must select a payment method and password authentication at the LINE Pay.</td></tr><tr><td style="text-align:center;">1170</td><td style="text-align:left;">Balance of the member&#39;s account has been changed.</td></tr><tr><td style="text-align:center;">1172</td><td style="text-align:left;">A record of transaction with the same order number already exists.</td></tr><tr><td style="text-align:center;">1180</td><td style="text-align:left;">The payment has been expired.</td></tr><tr><td style="text-align:center;">1198</td><td style="text-align:left;">API call request has been duplicated.</td></tr><tr><td style="text-align:center;">1199</td><td style="text-align:left;">An internal request error</td></tr><tr><td style="text-align:center;">1280</td><td style="text-align:left;">A temporary error occurred while processing the credit card payment.</td></tr><tr><td style="text-align:center;">1281</td><td style="text-align:left;">A credit card payment error</td></tr><tr><td style="text-align:center;">1282</td><td style="text-align:left;">A credit card authorization error</td></tr><tr><td style="text-align:center;">1283</td><td style="text-align:left;">The payment was refused due to suspected fraud.</td></tr><tr><td style="text-align:center;">1284</td><td style="text-align:left;">The credit card payment has temporarily stopped.</td></tr><tr><td style="text-align:center;">1285</td><td style="text-align:left;">Missing credit card payment information</td></tr><tr><td style="text-align:center;">1286</td><td style="text-align:left;">Wrong credit card payment information</td></tr><tr><td style="text-align:center;">1287</td><td style="text-align:left;">The credit card has been expired</td></tr><tr><td style="text-align:center;">1288</td><td style="text-align:left;">The credit card has low balance</td></tr><tr><td style="text-align:center;">1289</td><td style="text-align:left;">Exceeded the credit card limit</td></tr><tr><td style="text-align:center;">1290</td><td style="text-align:left;">Exceeded the limit of the credit card per payment</td></tr><tr><td style="text-align:center;">1291</td><td style="text-align:left;">The card has been reported as a stolen card.</td></tr><tr><td style="text-align:center;">1292</td><td style="text-align:left;">The card has been suspended.</td></tr><tr><td style="text-align:center;">1293</td><td style="text-align:left;">A CVN input error</td></tr><tr><td style="text-align:center;">1294</td><td style="text-align:left;">The card is listed on the blacklist.</td></tr><tr><td style="text-align:center;">1295</td><td style="text-align:left;">A wrong credit card number</td></tr><tr><td style="text-align:center;">1296</td><td style="text-align:left;">Unable to proceed the amount</td></tr><tr><td style="text-align:center;">1298</td><td style="text-align:left;">The card has been declined.</td></tr><tr><td style="text-align:center;">9000</td><td style="text-align:left;">An internal error</td></tr></tbody></table><h3 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h3><h4 id="request" tabindex="-1"><a class="header-anchor" href="#request" aria-hidden="true">#</a> Request</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> linePayClient<span class="token punctuation">.</span>payPreapproved<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  regKey<span class="token operator">:</span> <span class="token string">&#39;RK9A2BA1937EQTO&#39;</span><span class="token punctuation">,</span>
  body<span class="token operator">:</span> <span class="token punctuation">{</span>
    productName<span class="token operator">:</span> <span class="token string">&#39;Demo Product&#39;</span><span class="token punctuation">,</span>
    amount<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    currency<span class="token operator">:</span> <span class="token string">&#39;TWD&#39;</span><span class="token punctuation">,</span>
    orderId<span class="token operator">:</span> <span class="token string">&#39;20211221001&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="response" tabindex="-1"><a class="header-anchor" href="#response" aria-hidden="true">#</a> Response</h4><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;body&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;returnCode&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0000&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;returnMessage&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Success.&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;info&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;transactionId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2021123112345678910&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;transactionDate&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2021-12-31T09:00:31Z&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;comments&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="addhandler" tabindex="-1"><a class="header-anchor" href="#addhandler" aria-hidden="true">#</a> addHandler</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">addHandler</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span>
</code></pre></div><p>Returns <code>PayPreapprovedClient</code></p><p>Example:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">addHandler</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> type<span class="token punctuation">,</span> req<span class="token punctuation">,</span> next<span class="token punctuation">,</span> httpClient <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token comment">// payPreapproved</span>
  <span class="token keyword">return</span> <span class="token function">next</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="addhandlers" tabindex="-1"><a class="header-anchor" href="#addhandlers" aria-hidden="true">#</a> addHandlers</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">addHandlers</span><span class="token punctuation">(</span><span class="token operator">...</span>handlers<span class="token punctuation">)</span>
</code></pre></div><p>Returns <code>PayPreapprovedClient</code></p><p>Example:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">addHandlers</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> req<span class="token punctuation">,</span> next <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">next</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> req<span class="token punctuation">,</span> next <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">next</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> req<span class="token punctuation">,</span> next <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">next</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,28);function q(_,P){const t=r("ExternalLinkIcon");return i(),l("div",null,[p,c,n("p",null,[u,n("a",v,[m,s(t)]),k,n("a",h,[y,s(t)]),b,g,x]),f])}var I=a(d,[["render",q],["__file","pay-preapproved.html.vue"]]);export{I as default};
